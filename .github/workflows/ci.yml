name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dkotlin.incremental=false
  JAVA_VERSION: '22'
  JAVA_DISTRIBUTION: 'temurin'

jobs:
  validation:
    name: Gradle Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2

  build:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: validation
    strategy:
      matrix:
        module: [app, core-module, feature-module, datavein-oracle-native, secure-comm, sandbox-ui, collab-canvas, colorblendr]
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: wrapper
          cache-read-only: false

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Module - ${{ matrix.module }}
        run: ./gradlew :${{ matrix.module }}:build --continue --no-daemon

      - name: Run Tests - ${{ matrix.module }}
        run: ./gradlew :${{ matrix.module }}:test --continue --no-daemon

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.module }}
          path: |
            **/build/test-results/test/
            **/build/reports/tests/test/

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    needs: validation
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: wrapper

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Detekt
        run: ./gradlew detekt --continue --no-daemon
        continue-on-error: true

      - name: Run Spotless Check
        run: ./gradlew spotlessCheck --continue --no-daemon
        continue-on-error: true

      - name: Upload Code Quality Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: code-quality-reports
          path: |
            **/build/reports/detekt/
            **/build/reports/spotless/

  native-build:
    name: Native Build (NDK)
    runs-on: ubuntu-latest
    needs: validation
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup NDK
        run: |
          echo "ANDROID_NDK_HOME=$ANDROID_HOME/ndk/29.0.13846066" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=$ANDROID_HOME/ndk/29.0.13846066" >> $GITHUB_ENV

      - name: Install NDK
        run: |
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "ndk;29.0.13846066"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: wrapper

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Native Components
        run: |
          ./gradlew :datavein-oracle-native:assembleDebug --no-daemon
          ./gradlew :collab-canvas:assembleDebug --no-daemon
        continue-on-error: true

  documentation:
    name: Generate Documentation
    runs-on: ubuntu-latest
    needs: validation
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: wrapper

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Generate Documentation
        run: ./gradlew dokkaHtml --no-daemon
        continue-on-error: true

      - name: Upload Documentation
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: documentation
          path: |
            **/build/dokka/

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  api-generation:
    name: API Client Generation
    runs-on: ubuntu-latest
    needs: validation
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: wrapper

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Generate API Clients
        run: ./gradlew generateAllApiClients --no-daemon
        continue-on-error: true

      - name: Upload Generated API Clients
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: generated-api-clients
          path: |
            **/build/generated/